<?php 
require_once "functions.php";
function dh_add_scan_page() {
	wp_enqueue_script("jquery");
	wp_enqueue_script("jquery-ui-tabs");
	wp_enqueue_style('dh-vul-scan-style', plugins_url().'/dh-system-vul-scanner/style.css', false, "0.2", false);
	//wp_enqueue_style('dh-vul-scan-style', "//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css", false, "0.1", false);
	
	add_options_page( "Scan System", "Vulnerability Scan", "administrator", "system-vul-scan", "dh_scan_system_page");
}
add_action( 'admin_menu', 'dh_add_scan_page', 1 );


function dh_scan_system_page()
{
	echo "<h1>System Scan Results</h1>";
	?>
	<script>
	  jQuery( function() {
		jQuery( "#dh_scan_result_report" ).tabs();
	  });
	</script>
	<div id="dh_scan_result_report">
	  <ul>
		<li><a href="#tabs-1">Dangerous Functions <span class="tabcount" id="tabcount1"></span></a></li>
		<li><a href="#tabs-2">Dangerous Settings <span class="tabcount" id="tabcount2"></span></a></li>
		<li><a href="#tabs-3">Other Risks <span class="tabcount" id="tabcount3"></span></a></li>
	  </ul>
	  <div id="tabs-1">
		<p>PHP contains a lot of dangerous functions that can do a lot of damage if they are used the wrong way. Any failures below should be addressed. A pass means the function is disabled and is not a risk to the security of your server.</p>

		<?php
		$passcount = 0;
		$failcount = 0;
		$dangerous_functions = array("eval", "exec", "passthru", "shell_exec", "system","proc_open", "popen", "curl_exec" , "curl_multi_exec", "parse_ini_file" ,"show_source");
		foreach($dangerous_functions as $function)
		{
			$link = "https://yomotherboard.com";
			$error = "";
			$itemdetail = $function." - ";
			if(dh_check_std_function($function) == false) 
			{
				$passcoun++;
				$itemdetail .= "<span class='statuspass'>Pass</span>";
			}
			else
			{
				$failcount++;
				$itemdetail .= "<span class='statusfail'>Fail</span>";
				switch($function)
				{
					case "eval":
						$error = "This function is the most common function to be used by hackers to gain access to your server. It is one of the most dangerous things you can have enabled on your web server. It is highly recommended you disable this immediately. This function can only be disabled using Suhosin.";
					break;
					case "exec":
						$error = "Exec allows command line arguments to be executed as a string passed to this function. This should NEVER be used on a website. This function needs to be disabled. The command line is highly powerful and can result in your entire server being erased with a single command.";
						$link = "http://php.net/manual/en/function.exec.php";
					break;
					case "curl_exec":
						$error = "This wouldn't be as critical as some other requests, but could be used to cause a request loop and lock your web server. Can be used for some other ugly things. While it isn't abused as much as some other functions, you should definitely disable this if it is not being used.";
						$link = "http://php.net/manual/en/function.curl-exec.php";
					break;
					default:
						$error = "This function poses a security risk. If possible disable this method and avoid using it unless it's a last resort. <a href='#'>For more information on disabling methods, click here</a>";
						$link = "http://php.net/manual/en/function.".$function.".php";
					break;
				}
			}
			dh_outputListItem($function, $itemdetail, $error, $link);
		}
		?>
		<?php if($failcount != 0) {?><script>jQuery("#tabcount1").html("<?php echo $failcount;?>").fadeIn();</script><?php } ?>
		<?php if($failcount == 0) {?><p style="color:green">All dangerous php functions appear to be disabled. This makes your web server much more secure.</p><?php } ?>
		</div>
		<?php 
			$dangerous_inisettings = array("allow_url_fopen", "allow_url_include", "register_globals", "expose_php", "display_errors");
			$potential_inisettings = array("open_basedir", "log_errors", "upload_tmp_dir");
			$passcount = 0;
		?>
		<div id="tabs-2">
			<?php 
				foreach($dangerous_inisettings as $setting)
				{
					$link = "https://yomotherboard.com";
					$error = "";
					$itemdetail = $setting." - ";
					if(dh_check_ini_function($setting) == false) 
					{
						$passcoun++;
						$itemdetail .= "<span class='statuspass'>Pass</span>";
					}
					else
					{
						$failcount++;
						$itemdetail .= "<span class='statusfail'>Fail</span>";
						switch($setting)
						{
							case "allow_url_fopen":
								$error = "This isn't dangerous as a standalone function, but if used incorrectly, it could lead to a massive security flaw. If you use this function, you need to be very careful, if you do not need it, it is wise to disable it to avoid any risks of it being exploited.";
								$link = "https://yomotherboard.com/why-is-allow_url_fopen-considered-dangerous/";
							break;
							case "allow_url_include":
								$error = "This is a critical security risk. If you do not use this function disable it immediately. If you need it, make sure you are using it correctly and are not at risk. If a hacker can access your system a php file from another server can be included on your site making it incredibly difficuly to clean. ";
								$link = "https://yomotherboard.com/risk-phps-allow_url_include-enabled/";
							break;
							case "register_globals":
								$error = "This function has been removed as of PHP 5.4. While it is a good idea to disable this, its a better idea to update your version of PHP. Having this enabled will turn all request variables into normal variables which could allow users to inject code into your script.";
								$link = "https://yomotherboard.com/what-does-phps-register_globals-do/";
							break;
							case "expose_php":
								$error = "While this function itself is not a risk, it does provide the public with information about PHP that could allow them to hack your system. Turning this off will prevent users from being able to find out what version of PHP you are running.";
								$link = "https://yomotherboard.com/why-should-expose-php-be-disabled/";
							break;
							case "display_errors":
								$error = "Your server is set to dump PHP error data onto a webpage. This could expose SQL passwords and other sensitive data. PHP errors should not be visible on a production server. This should be disabled immediately if you are running a live web server.";
								$link = "http://php.net/manual/en/errorfunc.configuration.php#ini.display-errors";
							break;
							default:
								$error = "";
								$link = "";
							break;
						}
					}
					dh_outputListItem($setting, $itemdetail, $error, $link);
				}
			?>
			<?php if($failcount != 0) {?><script>jQuery("#tabcount2").html("<?php echo $failcount;?>").fadeIn();</script><?php } ?>
		</div>
		
		<?php 
			$modules = array("suhosin", "PDO");
			$passcount = 0;
			$failcount = 0;
		?>
		<div id="tabs-3">
			<?php 
				foreach($modules as $setting)
				{
					$link = "https://yomotherboard.com";
					$error = "";
					$itemdetail = $setting." - ";
					if(dh_check_module($setting) == true) 
					{
						$passcoun++;
						$itemdetail .= "<span class='statuspass'>Pass</span>";
					}
					else
					{
						$failcount++;
						$itemdetail .= "<span class='statusfail'>Fail</span>";
						switch(strtolower($setting))
						{
							case "suhosin":
								$error = "Suhosin is an incredibly valuable weapon in the war against hackers. It will block the eval command which is by far the most commonly used method for hackers to get code to execute on your web server. Installing this will improve your systems security with very little work involved to set it up.";
							break;
							case "pdo":
								$error = "There are many ways to perform SQL queries with PHP. Prepared satements are one of the best ways to protect against SQL injection without having to sanitise values. PDO is one of the best PHP libraries for this and it is recommended that you install this if you plan to interact with a database.";
								$link = "https://yomotherboard.com/sql-prepared-statements-using-php-pdo-queres/";
							break;
							default:
								$error = "";
								$link = "";
							break;
						}
					}
					dh_outputListItem($setting, $itemdetail, $error, $link);
				}
			?>
			<h3>Wordfence</h3>
			<?php 
				if(is_plugin_active("wordfence/wordfence.php")) echo "<span style='color:green'>This plugin is enabled</span>";
				else 
				{
					$failcount++;
					echo "<span style='color:red'>Wordfence is not currently installed. You should install this plugin as soon as possible to secure your wordpress install.</span>";
				}
			?>
			<h3>PHP Version</h3>
			<p>You are currently running PHP version <?php echo phpversion(); ?>.</p>
			<?php
			if(substr(phpversion(), 0, 3) != "5.4" && substr(phpversion(), 0, 1) != "7") echo "<span style='color:red'>In order to make sure you have the latest and greatest, it is recommended you update to PHP 5.4. PHP 7 will soon become the best version to install, but a lot of Wordpress plugins may break with this update. Make sure you are not running an old version of PHP. <a href='http://php.net/downloads.php' target='_blank'>Click here for PHP downloads</a></span>";
			else echo "<span style='color:green'>This is a safe release of PHP to be using</span>";
			?><h3>Wordpress Updates</h3><pre><?php
			$updateinfo = wp_get_update_data()["counts"];
			if($updateinfo["total"] == 0) echo "<span style='color:green'>Your Wordpress site is fully up to date.</span>";
			else{
				?>
				<span style='color:green'>Warning! You have pending updates that need to be installed!</span>
				<p>Updates can be annoying, but it's highly important you install them. Vulnerabilities can often be found in plugins, themes and even in Wordpress itself. It is massively important that you make sure your site is up to date. Hackers have spiders that can scan sites for out of date plugins and perform the hack automatically. Don't give them an easy door into your system.</p>
				<strong>Pending Updates</strong><br>
				<?php
				echo "<strong>Plugin Updates</strong> : ".$updateinfo["plugins"]."<br>";
				echo "<strong>Theme Updates</strong> : ".$updateinfo["themes"]."<br>";
				echo "<strong>Wordpress Updates</strong> : ".$updateinfo["wordpress"]."<br>";
			}
			?></pre>
			<?php if($failcount != 0) {?><script>jQuery("#tabcount3").html("<?php echo $failcount;?>").fadeIn();</script><?php } ?>
			
		</div>
	</div>
	<?php
}

function dh_outputListItem($setting, $itemdetail, $error = "", $link = "")
{
	?>	
	<div class='scanitem'>
		<div class='itemdetail'>
			<?php echo $itemdetail;?>
			<?php if($error != ""){ ?><a href="javascript:void()" onclick="javascript:jQuery('#errordetail<?php echo $setting;?>').slideToggle(100)"><span class='functontoggle'>Show Detail</span></a><?php } ?>
		</div>
		<div id='errordetail<?php echo $setting;?>' class='errordetail'><?php echo $error;?><br><a href='<?php echo $link;?>' target="_blank">Click here for more information</a></div>
	</div>
	<?php
}